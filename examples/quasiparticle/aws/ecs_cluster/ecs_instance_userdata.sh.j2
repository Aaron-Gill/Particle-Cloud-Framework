# Export environment variables
{% for ENVIRONMENT_VARIABLE in ENVIRONMENT_VARIABLES|sort %}
export {{ENVIRONMENT_VARIABLE}}
{% endfor %}

# Run your code here

sudo apt install docker.io -y

sysctl -w net.ipv4.conf.all.route_localnet=1
iptables -t nat -A PREROUTING -p tcp -d 169.254.170.2 --dport 80 -j DNAT --to-destination 127.0.0.1:51679
iptables -t nat -A OUTPUT -d 169.254.170.2 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 51679

# More of the env setup from the docs:
mkdir -p /var/log/ecs
mkdir -p /var/lib/ecs/data



docker \
run \
--name ecs-agent \
--detach=true \
--volume=/var/run/docker.sock:/var/run/docker.sock \
--volume=/var/log/ecs/:/log:Z \
--volume=/var/lib/ecs/data:/data:Z \
--volume=/sys/fs/cgroup:/sys/fs/cgroup:ro \
--volume=/var/run/docker/execdriver/native:/var/lib/docker/execdriver/native:ro \
--net=host \
--env=ECS_LOGFILE=/log/ecs-agent.log \
--env=ECS_LOGLEVEL=info \
--env=ECS_DATADIR=/data \
--env=ECS_CLUSTER={{ecs_cluster_name}} \
--env=ECS_ENABLE_TASK_IAM_ROLE=true \
--env=ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST=true \
--env=ECS_AVAILABLE_LOGGING_DRIVERS='["json-file","awslogs"]' \
--env=ECS_ENABLE_TASK_IAM_ROLE=true \
--env=http_proxy=$http_proxy \
--env=HTTP_PROXY=$http_proxy \
--env=HTTPS_PROXY=$https_proxy \
--env=https_proxy=$https_proxy \
--env=no_proxy=$no_proxy \
--env=NO_PROXY=$no_proxy \
--env=ECS_INSTANCE_ATTRIBUTES='{"instance-id":"'$(curl -s http://169.254.169.254/latest/meta-data/instance-id)'"}' \
--privileged \
amazon/amazon-ecs-agent:latest
